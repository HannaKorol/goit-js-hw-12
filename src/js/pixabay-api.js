const URL = "https://pixabay.com/api/";
const API_KEY = "45296804-0fb55f0e1381bd4cbf585a7a5";

// Робимо запит на сервер для пошуку колекції картинок

export function fetchImages(query) {
    const params = new URLSearchParams({
        key: API_KEY,
        q: query,
        image_type: "photo",
        orientation: "horizontal",
        safesearch: true,  
    });

    //Метод fetch() - надає набір властивостей і методів, які дозволяють відправляти, отримувати та обробляти ресурси із сервера, вбудований у браузер і доступний через об'єкт window,побудований на промісах. Значення промісу, який повертає метод fetch() — це об'єкт зі службовою інформацією про стан відповіді сервера. Цей об’єкт є екземпляром класу Response
    //
    return fetch(`${URL}?${params.toString()}`)    //шлях до даних на бекенді, які необхідно отримати
    .then(response => {                           //обробка відповіді від сервера
        if (!response.ok) {                        //Це необхідно для того, щоб fetch() правильно зреагував на статус код 404, який технічно не є помилкою, але для клієнта — це неуспішний результат. Ця помилка показує що данних немає - то навіщо їх оброблювати? Якщо response:false - то відразу переводимо в помилку.
            throw new Error(response.statusText);      //
        }
        return response.json();                   // Залежно від типу отримуваного контенту, використовуються різні методи для перетворення тіла відповіді у дані.  json() — парсить дані у JSON-форматі.  text() — парсить дані у простому текстовому форматі, наприклад .csv (табличні дані).  blob() — парсить дані, що описують файл, наприклад, зображення, аудіо або відео.
    })

.catch(error => {
    console.error("Image Search Error:", error);
    throw error;
});
}